/* auto-generated by genmsg_cpp from /home/nwadams/snowbots/ubc-tbird-ros-pkg/oscar/msg/path.msg.  Do not edit! */
#ifndef OSCAR_PATH_H
#define OSCAR_PATH_H

#include <string>
#include <vector>
#include "ros/message.h"
#include "ros/debug.h"
#include "ros/assert.h"
#include "ros/time.h"

namespace oscar
{

//! \htmlinclude path.msg.html

class path : public ros::Message
{
public:
  typedef boost::shared_ptr<path> Ptr;
  typedef boost::shared_ptr<path const> ConstPtr;

  typedef int32_t _confidence_type;
  typedef int32_t _direction_type;
  typedef int32_t _distance_type;

  int32_t confidence;
  int32_t direction;
  int32_t distance;

  path() : ros::Message(),
    confidence(0),
    direction(0),
    distance(0)
  {
  }
  path(const path &copy) : ros::Message(),
    confidence(copy.confidence),
    direction(copy.direction),
    distance(copy.distance)
  {
    (void)copy;
  }
  path &operator =(const path &copy)
  {
    if (this == &copy)
      return *this;
    confidence = copy.confidence;
    direction = copy.direction;
    distance = copy.distance;
    return *this;
  }
  virtual ~path() 
  {
  }
  inline static std::string __s_getDataType() { return std::string("oscar/path"); }
  inline static std::string __s_getMD5Sum() { return std::string("3551098c9d8ba0ab66ec155e8ee6b271"); }
  inline static std::string __s_getMessageDefinition()
  {
    return std::string(
    "int32 confidence #a percentage\n"
    "int32 direction  \n"
    "int32 distance \n"
    "\n"
    "\n"
    );
  }
  inline virtual const std::string __getDataType() const { return __s_getDataType(); }
  inline virtual const std::string __getMD5Sum() const { return __s_getMD5Sum(); }
  inline virtual const std::string __getMessageDefinition() const { return __s_getMessageDefinition(); }
  inline uint32_t serializationLength() const
  {
    unsigned __l = 0;
    __l += 4; // confidence
    __l += 4; // direction
    __l += 4; // distance
    return __l;
  }
  virtual uint8_t *serialize(uint8_t *write_ptr,
#if defined(__GNUC__)
                             __attribute__((unused)) uint32_t seq) const
#else
                             uint32_t seq) const
#endif
  {
    SROS_SERIALIZE_PRIMITIVE(write_ptr, confidence);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, direction);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, distance);
    return write_ptr;
  }
  virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, confidence);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, direction);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, distance);
    return read_ptr;
  }
};

typedef boost::shared_ptr<path> pathPtr;
typedef boost::shared_ptr<path const> pathConstPtr;


}

#endif
